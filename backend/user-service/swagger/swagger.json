{
  "swagger": "2.0",
  "info": {
    "title": "User Service API",
    "description": "API for managing users in Concert Ticket Booking System",
    "version": "1.0"
  },
  "host": "localhost:8081",
  "basePath": "/api",
  "schemes": ["http"],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter token in format: Bearer <token>"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user with email, name, and password",
        "tags": ["Users"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {"type": "string"}
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {"type": "string"}
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Retrieve user details by ID",
        "tags": ["Users"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "User ID"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid user ID",
            "schema": {
              "type": "object",
              "properties": {
                "error": {"type": "string"}
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {"type": "string"}
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {"type": "string"}
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Get current user",
        "description": "Retrieve details of the authenticated user",
        "tags": ["Users"],
        "produces": ["application/json"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {"type": "string"}
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {"type": "string"}
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {"type": "string"}
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticate user with email and password, return JWT token",
        "tags": ["Users"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "login",
            "description": "Login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "token": {"type": "string"}
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {"type": "string"}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {"type": "string"}
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {"type": "string"}
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {"type": "integer"},
        "email": {"type": "string"},
        "name": {"type": "string"},
        "created_at": {"type": "string", "format": "date-time"},
        "updated_at": {"type": "string", "format": "date-time"}
      }
    },
    "UserCreateRequest": {
      "type": "object",
      "properties": {
        "email": {"type": "string"},
        "name": {"type": "string"},
        "password": {"type": "string"}
      }
    },
    "LoginRequest": {
      "type": "object",
      "properties": {
        "email": {"type": "string"},
        "password": {"type": "string"}
      }
    }
  }
}